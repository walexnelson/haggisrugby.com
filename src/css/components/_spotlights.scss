///
/// Hyperspace by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Spotlights */

.spotlights {
  > section {
    @include vendor('display', 'flex');
    @include vendor('flex-direction', 'row');

    background-color: rgba(255, 255, 255, 0.05);
    border-radius: 4px;
    margin: 16px 0;

    > .image {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      width: 30%;
      padding: 16px;

      img {
        object-fit: cover;
        border-radius: 4px;
        width: 100%;
        height: auto;
        fill: #fff;
      }

      &:before {
        @include vendor('transition', 'opacity #{_duration(activation)} ease');
        background: transparentize(_palette(bg), 0.1);
        content: '';
        display: block;
        height: 100%;
        left: 0;
        opacity: 0;
        position: absolute;
        top: 0;
        width: 100%;
      }
    }

    > .content {
      @include padding(4em, 5em);
      @include vendor('display', 'flex');
      @include vendor('flex-direction', 'column');
      @include vendor('justify-content', 'center');
      width: #{_size(inner-width) - 25em};
      -ms-flex: 1;

      > .inner {
        @include vendor('transform', 'translateX(0) translateY(0)');
        @include vendor(
          'transition',
          ('opacity #{_duration(activation)} ease', 'transform #{_duration(activation)} ease')
        );
        opacity: 1;
        overflow-wrap: break-word;

        .title {
          font-size: 24px;
          color: _palette(accent3);
        }
        .caption {
          font-size: 14px;
          color: rgba(255, 255, 255, 0.4);
          text-transform: uppercase;
        }
      }
    }

    &.inactive,
    body.is-preload & {
      > .image {
        &:before {
          opacity: 1;
        }
      }

      > .content {
        > .inner {
          @include vendor('transform', 'translateX(-1em)');
          opacity: 0;
        }
      }
    }

    @include breakpoint('<=xlarge') {
      > .content {
        @include padding(4em, 4em);
      }
    }

    @include breakpoint('<=medium') {
      display: block;

      > .image {
        width: 100%;
      }

      > .content {
        width: 100%;
      }

      &.inactive,
      body.is-preload & {
        > .content {
          > .inner {
            @include vendor('transform', 'translateY(1em)');
          }
        }
      }
    }

    @include breakpoint('<=small') {
      > .image {
        height: 50vh;
        min-height: 15em;
      }

      > .content {
        @include padding(3em, 2em);
      }
    }
  }
}
